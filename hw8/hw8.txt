Q1: A back-end server is a part of the back-end process. The back-end process typically consists of three parts: a server, an application and a database. The back-end houses all the technical processes, as opposed to the front end, which is usually where the user's interaction occurs. There are certain online courses and tutorials that basically introduce people to the basics of servers. For example, there is a free “Introduction to Linux” online course designed by the Linux foundation to give students a good working knowledge of Linux, its free and very accessible(online). Another great resource to help individuals to get a better understanding of a server is online databases made by tech professionals. For example, there is an online database titled “A Practical guide to writing clients and servers,” on j.marshall.com, it’s a detailed guild of servers. These databases are generally free and fairly easy to access, some are even downloadable, making these a powerful recourse for certain individuals.  The third resource I want to talk about is online videos about server tutorials made by informed personnel. These video tutorials make the whole learning process into a visual experience, making the learning process more enjoyable and engaging, thus enhances the result. 

Q2: A SQL or Structured Query Language is a standard language for database management systems, used to communicate with a certain database.  A NoSQL or a non-relational database is a mechanism for storage and retrieval of data using methods other than the tabular relations. Nowadays, in a world of big data, NoSQL database are preferred over SQL database for large data sets because NoSQL is best fit for hierarchical data storage. “Getting Started” by essentialSQL (https://www.essentialsql.com/getting-started/) is an entree level SQL training course, the course moves at a relatively slow pace so that the individuals who are completely new to SQL can have an easier time learning it. The other tutorial I found is “An introductory SQL Tutorial” on HubSpot.com (https://blog.hubspot.com/marketing/sql-tutorial-introduction#sm.0010bwodd17tbdj5sth1tam66yrrq) , this tutorial covers a lot of details and small tips that will help to build a solid foundation for newcomers.

Q3: A lot of websites offer different forms of helps regarding JavaScript. For example, w3school offers varieties of helps for writing and developing JavaScript. A promise is a special kind of JavaScript which contains another object, and in ES6, there are specific spec for promise implementations, thus will provide a better way to handle asynchronous processing in a more synchronous style. I consulted three different websites for this question, specifically, 
1.“ES6 Promises” blog by Dave Atchley (http://www.datchley.name/es6-promises/), 
2. “ES6 Promises in Depth” by Nicolas Bevacqua on ponyfoo.com (https://ponyfoo.com/articles/es6-promises-in-depth), 
3. “Understand promises before you start using async/await” by Daniel Brain on medium.com (https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8#.m565gv8vh). 

Q4: For helps on git merge, git-scm.com provide a great database/documentation regarding git-merge, the documentation explains terms and specific procedures for git-merging in detail, and the database is completely free to access. The default editor is for the merging process for my computer, merge=refs/heads/master and the remote=origin.
